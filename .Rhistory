citation()
citation("dplyr")
z = complex(1,1)
z
z = complex(1,imaginary = 1)
z
z = complex(real = 1,imaginary = 1)
z
z^2
2* z
(2*z)^2
z = complex(real = 2,imaginary = 1)
z^3
Im(z)^2
in.mandelbrot.set <- function(c, iterations = 100, bound = 1000000)
{
z <- 0
for (i in 1:iterations)
{
z <- z ** 2 + c
if (Mod(z) > bound)
{
return(FALSE)
}
}
return(TRUE)
}
resolution <- 0.001
sequence <- seq(-1, 1, by = resolution)
m <- matrix(nrow = length(sequence), ncol = length(sequence))
for (x in sequence)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
typeof(pi)
x<- c(1,"s")
typeof(x)
print(x)
is.atomic(x)
knitr::opts_chunk$set(echo = TRUE)
print(numVec, charVec)
x <- c(1,2,3)
y <- c(4,5,6)
z <- c(x,y,c(7,8,9)) # We can nest c() statements inside a c() statement to
# join vectors.
z
print(1)
A <- matrix(runif(16), ncol = 4)
A
BasicList <- list(Name = c("James", "Sam", "Jed", "Adam", "Eve"),
Age = c(23, 20, 39, 40, 13),
FavouriteFood = c("Lasange","Monkey Nuts","Pizza", "Calzones", "Bread"))
BasicList$Age[3]
BasicList[,"FavouriteFood"]
BasicList["FavouriteFood"]
BasicList[2]
list(c(1,2),c(2,3))
knitr::opts_chunk$set(echo = TRUE)
data <- c(1,2,3,4,5,6,7,8,9,10)
response <- c(4,6,8,10,12,14,16,18,20,22)
dataSet <- data.frame(X = data, Y =response)
linearmodel <- lm(data = dataSet, formula = Y ~ X)
str(linearModel)
summary(linearModel)
summary(linearmodel)
cars
str(cars)
as.list(cars)
vec <- c(1,2,3,4,5)
mat <- cbind(c(1,2,3),c(4,5,9),c(9,2,4))
list <- list(X = c(1,2,3), Y = c(4,5,6))
var(mat)
sd(mat)
nrow(mat)
length(list)
fft(mat)
View(dataSet)
knitr::opts_chunk$set(echo = TRUE)
x <- seq(1:10, by = 1)
x <- seq(from = 1, to = 10, by = 1)
y = seq(0, 1, 0.01)
print(y[1:10])
demo()
demo("is.things")
plot(runif(100))
plot(rnorm(100))
plot(density(rnorm(100)))
plot(density(rnorm(10000)))
plot(density(rnorm(100000)))
plot(density(rnorm(1000000)))
plot(density(runif(1000000)))
plot(density(rpois(1000000,0.2)))
plot(density(rpois(1000000,3)))
x <- c(1,2); y <- c(2,3)
sum(x,y)
data
order(data)
order(data$V1)
data[order(V1)]
data[with(data,order(V2))]
data <- data.frame(
ID = seq(1,10,1),
V1 = runif(10),
V2 = rnorm(10),
V3 = 2 * rnorm(10)
)
data
data[with(data,order(V2))]
data[with(data,order(V2)),]
getwd()
cars
write.csv(cars, "cars.csv")
x <- (2 * runif(100000, min = -5, max = 5) + rpois(100000, 3))/rnorm(100000)
plot(density(x))
x <- (2 * runif(100000, min = -5, max = 5) + rpois(100000, 3))
plot(density(x))
x <- rpois(100000, 3))
plot(density(x))
x <- rpois(100000, 3)
plot(density(x))
x <- rpois(100000, 3)/rpois(10000,2)
plot(density(x))
plot(density(na.omit(x)))
library(MASS)
data(mtcars)
mtcars
select(mtcars, mpg, hp)
library(dplyr)
select(mtcars, mpg, hp)
filter(select(mtcars, mpg, hp), mpg > 20)
newdata <- mtcars %>%
select(mpg, hp) %>%
filter(mpg > 20)
knitr::opts_chunk$set(echo = TRUE)
# Using the pipe operator.
newdata <- mtcars %>%
select(mpg, hp) %>%
filter(mpg > 20)
source('~/.active-rstudio-document', echo=TRUE)
